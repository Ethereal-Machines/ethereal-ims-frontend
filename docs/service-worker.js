"use strict";var precacheConfig=[["/index.html","9990848a1f311d9f8a199cedf563337c"],["/static/css/main.d0198060.css","fe1a52d155cccbb395a84986e2c1e6c8"],["/static/js/0.b7d76459.chunk.js","9a9e67279a85501a7af131f2a5433883"],["/static/js/1.79ffdd3c.chunk.js","4dbe645349f967e5e38a66c7ef7ca33b"],["/static/js/2.f4004679.chunk.js","fcb3aabcd5516a513deb33946490a82f"],["/static/js/3.1a5450f3.chunk.js","316d05ade84b5ca9af9889e2f8393417"],["/static/js/4.085c8142.chunk.js","3a6bb20bc0465a3cb609faa4ccaff403"],["/static/js/5.5a2642e5.chunk.js","85fc868c8160c60ce32661212d302d4a"],["/static/js/6.82c47b57.chunk.js","ddc8197cf5bbc05e0a0e2b2a3260c000"],["/static/js/7.aa6933b8.chunk.js","0d2716483b66215c288f20f689a627a2"],["/static/js/8.a239ce0b.chunk.js","2386a2148999a259ae3a6d5ded3cef07"],["/static/js/9.bbda5504.chunk.js","0ec690d2f21ad5cb3fb6efea2ff2584a"],["/static/js/main.e559ef32.js","3ad1744b4ca5e3451ef197557aea5826"],["/static/media/estrella-render.9ab9508d.svg","9ab9508dfbd7f8e8d3159b1dbe7a9731"],["/static/media/halo-render.cfe9a740.svg","cfe9a740df1982f7d7727855d0f7e0c4"],["/static/media/halo.84774977.png","84774977c7412f7aeb2725249a5eefa2"],["/static/media/loader.b4b37d6a.gif","b4b37d6ad5f346b8831d5f6d1cd6faf1"],["/static/media/logo.f9bc505e.svg","f9bc505ecc7e133b8ed79455bfa8ae4a"],["/static/media/pentagram-render.ed89b855.svg","ed89b855f3c5cb46402e0fcb02243487"],["/static/media/pentagram.c1608fd2.png","c1608fd2c7f84245496fd944dc7b64da"],["/static/media/ray.1f290f0f.png","1f290f0f6d9740ff6b838f25d7a34265"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});